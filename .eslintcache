[{"/Users/alexkayser/git/battle-hero/src/index.js":"1","/Users/alexkayser/git/battle-hero/src/App.js":"2","/Users/alexkayser/git/battle-hero/src/store/index.js":"3","/Users/alexkayser/git/battle-hero/src/store/battleStore.js":"4","/Users/alexkayser/git/battle-hero/src/store/marvelStore.js":"5","/Users/alexkayser/git/battle-hero/src/components/HeroesList.js":"6","/Users/alexkayser/git/battle-hero/src/components/BattleHero.js":"7","/Users/alexkayser/git/battle-hero/src/components/HeroCard.js":"8","/Users/alexkayser/git/battle-hero/src/components/Result.js":"9","/Users/alexkayser/git/battle-hero/src/about.js":"10"},{"size":602,"mtime":1589679722879,"results":"11","hashOfConfig":"12"},{"size":1377,"mtime":1615053036331,"results":"13","hashOfConfig":"12"},{"size":228,"mtime":1589679546579,"results":"14","hashOfConfig":"12"},{"size":947,"mtime":1589680249834,"results":"15","hashOfConfig":"12"},{"size":316,"mtime":1589679546580,"results":"16","hashOfConfig":"12"},{"size":1390,"mtime":1589679546576,"results":"17","hashOfConfig":"12"},{"size":2794,"mtime":1589680146642,"results":"18","hashOfConfig":"12"},{"size":1113,"mtime":1589680286124,"results":"19","hashOfConfig":"12"},{"size":803,"mtime":1589679546576,"results":"20","hashOfConfig":"12"},{"size":2563,"mtime":1615054536175,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1hd69st",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexkayser/git/battle-hero/src/index.js",[],["45","46"],"/Users/alexkayser/git/battle-hero/src/App.js",[],"/Users/alexkayser/git/battle-hero/src/store/index.js",[],"/Users/alexkayser/git/battle-hero/src/store/battleStore.js",["47"],"\nconst initData = [\n  {\"id\": 123, \"name\": \"Hero asdad\", \"votes\": 1 },\n  {\"id\": 456, \"name\": \"qweqwe test\", \"votes\": 1 }\n]\n\nconst compare = (a, b) => {\n  return b.votes - a.votes;\n}\n\nfunction battleReducer(state = [], action) {\n  //console.log(\"Battle action\", action);\n    switch (action.type) {\n      case \"ADD_VOTE\":\n        let heroID = action.payload.id;\n        let position = state.findIndex(hero => hero.id === heroID);\n        let newList;\n\n        if (position < 0) {\n          //create a new item on the list\n          newList = [...state, {...action.payload, \"votes\": 1}];          \n        } else {\n          //update vote\n          let hero = state[position];\n          hero.votes = hero.votes+1;\n          newList = [...state.slice(0, position), hero, ...state.slice(position+1)];\n        }\n\n        newList.sort(compare);\n\n        return newList;\n\n      default:\n        return state;\n    }\n  }\n  \n  export default battleReducer;\n  ","/Users/alexkayser/git/battle-hero/src/store/marvelStore.js",[],"/Users/alexkayser/git/battle-hero/src/components/HeroesList.js",[],"/Users/alexkayser/git/battle-hero/src/components/BattleHero.js",["48"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from 'react-materialize';\nimport HeroCard from './HeroCard';\nimport Result from './Result';\nimport axios from \"axios\";\nimport CryptoJS from 'crypto-js'\n\nfunction BattleHero() {\n\n  const content = useSelector(state => state.marvelReducer);\n  const dispatch = useDispatch();\n\n  const [heroA, setHeroA] = useState();\n  const [heroB, setHeroB] = useState();\n\n  // ######################################################\n  // THIS IS WORKING!!! COMMENTED TO SAVE MARVEL API CALLS\n  // ######################################################\n  //\n  function getData() {\n    return dispatch => {\n      let ts = (new Date()).getTime();\n      let publick = process.env.REACT_APP_MARVEL_PUBLIC_KEY;\n      let privatek = process.env.REACT_APP_MARVEL_PRIVATE_KEY;\n      let hash = CryptoJS.MD5(ts+privatek+publick);\n      let url = `https://gateway.marvel.com:443/v1/public/characters?apikey=${publick}&hash=${hash}&ts=${ts}&orderBy=-modified&limit=50`;\n      axios.get(url).then(res => \n        dispatch({\n            type: \"FETCH_DATA\",\n            loading: false,\n            data: res.data\n        })\n      );\n    };\n  }\n\n  useEffect(() => {\n    dispatch(getData());\n  }, []);\n\n  //console.log(content);\n\n  function getRandom(arr, n) {\n    let result = new Array(n),\n        len = arr.length,\n        taken = new Array(len);\n      if (n > len)\n          throw new RangeError(\"getRandom: more elements taken than available\");\n      while (n--) {\n          let x = Math.floor(Math.random() * len);\n          result[n] = arr[x in taken ? taken[x] : x];\n          taken[x] = --len in taken ? taken[len] : len;\n      }\n      return result;\n    }\n\n    if (content) {\n      const list = content.data.data.results;\n      const matchResult = getRandom(list,2);\n      if(!heroA) {\n        setHeroA(matchResult[0]);\n      }\n      if(!heroB) {\n        setHeroB(matchResult[1]);\n      }\n    }\n    \n    const voteA = () => {\n      //alert(heroA.name)\n      dispatch(vote(heroA));\n      setHeroB();\n    }\n    \n    const voteB = () => {\n      //alert(heroB.name)\n      dispatch(vote(heroB));\n      setHeroA();\n    }\n\n    const vote = (voted) => {\n      return dispatch => {\n        dispatch(\n          {\n            type: \"ADD_VOTE\",\n            payload: {id: voted.id, name: voted.name}\n          }\n        )\n      }\n    }\n\n  return (\n    <div>\n      {content.data && (\n        <>\n        <Row>\n            <Col l={4} m={6} s={6}><HeroCard hero={heroA} vote={voteA} /></Col>\n            <Col l={4} m={6} s={6}><HeroCard hero={heroB} vote={voteB} /></Col>\n            <Col l={4} m={12} s={12}><Result /></Col>\n        </Row>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default BattleHero;\n","/Users/alexkayser/git/battle-hero/src/components/HeroCard.js",[],"/Users/alexkayser/git/battle-hero/src/components/Result.js",[],"/Users/alexkayser/git/battle-hero/src/about.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":7,"nodeType":"55","messageId":"56","endLine":2,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":40,"column":6,"nodeType":"59","endLine":40,"endColumn":8,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'initData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [dispatch]",{"range":"66","text":"67"},[1290,1292],"[dispatch]"]